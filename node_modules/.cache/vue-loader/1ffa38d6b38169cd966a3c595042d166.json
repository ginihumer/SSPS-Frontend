{"remainingRequest":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/src/components/HelloWorld.vue","mtime":1645110132772},{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mohamed/Mohamed/JKU/Fifth_semester/Practical_work/final/explainable_segmentation/Web/d3-app-nasr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWxlY3RMYXllciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiBtaW4tY29udGVudDsKICByaWdodDogMzBweDsKICB6LWluZGV4OiAzMDAwOwp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiSA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-sheet outlined color=\"primary\" rounded>\n      <v-card outlined style=\"min-height: 93vh\" elevation=\"0\">\n        <v-container>\n          <v-file-input\n            accept=\"image/png, image/jpeg, image/bmp\"\n            placeholder=\"Pick an avatar\"\n            prepend-icon=\"\"\n            append-icon=\"mdi-camera\"\n            label=\"Image\"\n            outlined\n            v-model=\"imagge\"\n            @change=\"postForm()\"\n          ></v-file-input>\n          <v-row align-content=\"center\">\n            <v-col cols=\"6\">\n              <v-container>\n                <v-img v-if=\"plotimg\" :src=\"url\"   max-height=\"500\" max-width=\"500\"></v-img>\n              </v-container>\n            </v-col>\n            <v-col cols=\"6\">\n              <plotly\n                v-if=\"plot\"\n                :data=\"data1\"\n                :layout=\"layout_2\"\n                :displayModeBar=\"false\"\n                ref=\"graph\"\n                id=\"graph\"\n                @selected=\"printval($event)\"                \n              />\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"6\">\n              <v-container>\n                <v-select\n                  v-if=\"plot\"\n                  v-model=\"selected2\"\n                  :items=\"items2\"\n                  class=\"selectLayer\"\n                  outlined\n                  prepend-inner-icon=\"mdi-layers\"\n                  hide-spin-buttons\n                  dense\n                  @change=\"changeSelect()\"\n                >\n                </v-select>\n                <plotly\n                  v-if=\"plot2\"\n                  :data=\"data2\"\n                  :layout=\"layout_3\"\n                  :displayModeBar=\"false\"\n                />\n              </v-container>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col class=\"d-flex\" sm=\"6\"> </v-col>\n\n            <v-col class=\"d-flex\" sm=\"6\">\n              <v-container>\n                <v-row>\n                  <v-col>\n                    <v-select\n                      v-if=\"plot\"\n                      v-model=\"selected\"\n                      :items=\"itemss\"\n                      @change=\"\n                        resetValues();\n                        changeSelect();\n                      \"\n                      label=\"Select type\"\n                    ></v-select>\n                  </v-col>\n                  <v-col> </v-col>\n                </v-row>\n              </v-container>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card>\n    </v-sheet>\n  </v-container>\n</template>\n\n<script>\nimport { Plotly } from \"vue-plotly\";\nimport axios from \"axios\";\nexport default {\n  name: \"HelloWorld\",\n  components: {\n    Plotly,\n  },\n  data: () => ({\n    plot: true,\n    plot2: true,\n    plotimg: true,\n    items: [\"background\", \"cap\", \"ring\", \"stipe\", \"gills\", \"volva\", \"mycelium\"],\n    items2: [],\n    selected: 0,\n    selected2: \"final_conv\",\n    data: [\n      {\n        z: [],\n        type: \"contour\",\n        autorange: \"reversed\",\n        showscale: false,\n      },\n    ],\n    data1: [\n      {\n        z: [],\n        type: \"contour\",\n        autorange: \"reversed\",\n        showscale: true,\n      },\n    ],\n    data2: [\n      {\n        z: [],\n        type: \"contour\",\n        autorange: \"reversed\",\n      },\n    ],\n    layout: {\n      title: \"Ground Truth\",\n      yaxis: { autorange: \"reversed\" },\n      width: 500,\n      height: 500,\n      margin: {\n        l: 50,\n        r: 50,\n        b: 100,\n        t: 100,\n        pad: 2, \n        \n          },\n      paper_bgcolor: '#c7c7c7',\n\n    },\n    layout_2: {\n      title: \"Predicted Mask\",\n      yaxis: { autorange: \"reversed\" },\n      showticklabels: true,\n      tickmode: 'array',\n      tickvals: [0,1, 2, 3,4,5],\n      ticktext: [\n        \n        \"background\",\n        \"cap\",\n        \"ring\",\n        \"stipe\",\n        \"gills\",\n        \"volva\",\n        \"mycelium\",\n      ],\n      width: 500,\n      height: 500,\n      margin: {\n        l: 50,\n        r: 50,\n        b: 100,\n        t: 100,\n        pad: 2, \n        \n          },\n      paper_bgcolor: '#c7c7c7',\n      dragmode: \"select\",\n    },\n    layout_3: {\n      title: \"Grad Cam\",\n      yaxis: { autorange: \"reversed\" },\n      width: 500,\n      height: 500,\n      margin: {\n        l: 50,\n        r: 50,\n        b: 100,\n        t: 100,\n        pad: 2,\n        \n          },\n      paper_bgcolor: '#c7c7c7',\n    },\n    imagge: null,\n    url: null,\n    arrayselected: { x: [], y: [] },\n  }),\n  computed: {\n    itemss() {\n      return this.items.map((item, index) => {\n        return {\n          text: item,\n          value: index,\n        };\n      });\n    },\n    itemss2() {\n      return this.items2.map((item, index) => {\n        return {\n          text: item,\n          value: index,\n        };\n      });\n    },\n  },\n\n  mounted() {\n    this.$refs.graph.$on(\"click\", (d) => {\n      this.resetValues()\n      this.printval(d)\n\n    });\n  },\n\n  methods: {\n    postForm() {\n      console.log(\"hhere\", this.imagge);\n      this.url = URL.createObjectURL(this.imagge);\n      this.plotimg = true;\n      let formData = new FormData();\n      formData.append(\"image\", this.imagge);\n      axios\n        .post(\"http://localhost:1025/form-example\", formData)\n        .then((response) => {\n          this.data[0].z = response.data;\n          this.data1[0].z = response.data;\n          this.changeSelect();\n          this.getLayers();\n          this.plot = true;\n        });\n    },\n    getLayers() {\n      console.log(\"hhere\", this.imagge);\n      this.url = URL.createObjectURL(this.imagge);\n      let formData = new FormData();\n      formData.append(\"image\", this.imagge);\n      axios.get(\"http://localhost:1025/form-example\").then((response) => {\n        this.items2 = response.data;\n      });\n    },\n    changeSelect() {\n      this.plot2 = false;\n      let self = this;\n      this.url = URL.createObjectURL(this.imagge);\n      let formData = new FormData();\n      formData.append(\"image\", this.imagge);\n      formData.append(\"item\", this.selected);\n      formData.append(\"item2\", this.selected2);\n      formData.append(\"xselected\", this.arrayselected.y);\n      formData.append(\"yselected\", this.arrayselected.x);\n\n      axios\n        .post(\"http://localhost:1025/change\", formData)\n        .then((response) => {\n          self.data2[0].z = response.data;\n          console.log(\"data\", self.data);\n          console.log(\"data\", self.data2);\n          this.plot2 = true;\n        })\n        .finally((res) => {\n          console.log(res);\n        });\n    },\n    resetValues() {\n      this.arrayselected = { x: [], y: [] };\n    },\n    printval(e) {\n      if (e.range) {\n      this.arrayselected = e.range;\n      this.changeSelect();\n      console.log(e);\n      console.log(e.points);\n      }\n      else {\n      console.log('e', e.event.x);\n      this.arrayselected.x[0] = e.points[0].x;\n      this.arrayselected.y[0]= e.points[0].y;\n      this.changeSelect();\n      console.log(e);\n      console.log(e.points);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.selectLayer {\n  position: absolute;\n  width: min-content;\n  right: 30px;\n  z-index: 3000;\n}\n</style>"]}]}